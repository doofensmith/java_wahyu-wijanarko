name: CI-CD Pipeline Flows
on:
  # manual trigger workflow run
  workflow_dispatch:
  # trigger workflow on push branch master
  push:
    branches:
      - master

# global level working directory
defaults:
  run:
    working-directory: './39_CICD with Microservices/praktikum/springboot-simple'

jobs:
  # 1st Job, run Testing
  tests:
    name: Running Unit Test/Integration Test
    # run on ubuntu with latest version
    runs-on: ubuntu-latest
    # jobs steps
    steps:
      # checkout repo under $github_workspace, accesible by workflow
      - uses: actions/checkout@v3
      # set up JDK
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
      # set up maven cache
      - name: Cache Maven Package
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      # Run Test
      - name: Run Tests
        run:
          mvn clean verify

  # 2nd job, build project
  build:
    needs: tests
    name: Build Project Package and Push to Docker
    runs-on: ubuntu-latest
    # job steps
    steps:
      # checkout repo under $github_workspace, accesible by workflow
      - uses: actions/checkout@v3
      # set up JDK
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
      # set up maven cache
      - name: Cache Maven Package
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      # Run Build Package
      - name: Run Build Package
        run:
          mvn clean package -Dmaven.test.skip=true
      # Login to Docker HUB
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      # Build and Push Image to Docker
      - name: Build and Push Image to Docker
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: doofensmith/springboot-simple:latest

  # 3rd job, deploy to aws
  deploy_to_aws:
    needs: build
    name: Deploy App to AWS
    runs-on: ubuntu-latest
    # job steps
    steps:
      # Use SSH
      - name: Configure deploy with ssh
        uses: appleboy/ssh-action@master
        with:
          username: ${{ secrets.SSH_USER }}
          host: ${{ secrets.SSH_HOST }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script:
            docker stop springboot-simple
            docker rm springboot-simple
            docker rmi doofensmith/springboot-simple:latest
            docker pull doofensmith/springboot-simple:latest
            docker run -d --name springboot-simple -p 80:8080 doofensmith/springboot-simple:latest

